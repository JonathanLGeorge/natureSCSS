//standard is 1140px width
.row {
  max-width: $grid-width;
  background-color: #eee;
  //center block elements inside another block element
  margin: 0 auto; //auto will figure out the margin for left and right
  //margin-bottom: $gutter-vertical;

  //so we dont have the last row have a margin
  &:not(:last-child) {
    //the not will select everything but the last child
    margin-bottom: $gutter-vertical;
  }

  @include clearfix;

  //this will select all classes that start with "col-". That was ^ is doing. selecting the start
  [class^="col-"] {
    background-color: orangered;
    float: left; //we always float left for grids colums

    //we dont want the last colums margin
    &:not(:last-child) {
      margin-right: $gutter-horizontal;
    }
  }
  //$ ends, ^ starts, * contains

  .col-1-of-2 {
    //these are half the row length - the gutter
    width: calc((100% - #{$gutter-horizontal}) / 2);
  }

  .col-1-of-3 {
    width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
  }
  .col-2-of-3 {
    width: calc(
      2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal}
    );
  }

  .col-1-of-4 {
    width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
  }

  .col-2-of-4 {
    width: calc(
      2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal}
    );
  }

  .col-3-of-4 {
    width: calc(
      3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal}
    );
  }
}

//there is a problem that is fixed with clearfix
//we have zero pixel height for each row
//this is because each of the child elements of the row element ar floated
//this makes the height colaps and become zero
//we need a clear fix hack to fix this (we will take advantage of a ./abstrats/mixin)
